<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>
    <name>Mars Rover</name>
    <description>
        Translating commands sent from earth to instructions that are understood by Mars rover
    </description>

    <groupId>com.mars.rover</groupId>
    <artifactId>mars-rover</artifactId>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>core</module>
        <module>api</module>
        <module>server</module>
        <module>integration-tests</module>
        <module>code-coverage</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>

        <java.version>17</java.version>
        <maven.compiler.release>${java.version}</maven.compiler.release>

        <commons-lang.version>3.12.0</commons-lang.version>
        <logback.version>1.2.11</logback.version>
        <lombok.version>1.18.24</lombok.version>

        <assertj.version>3.23.1</assertj.version>
        <junit.version>5.8.2</junit.version>
        <mockito.version>4.6.1</mockito.version>

        <maven-clean-plugin.version>3.2.0</maven-clean-plugin.version>
        <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>
        <maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
        <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
        <maven-site-plugin.version>3.12.0</maven-site-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>

        <sonar.language>java</sonar.language>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.organization>ibrahimelhadeg</sonar.organization>
        <sonar.projectKey>ibrahimelhadeg_mars-rover-api</sonar.projectKey>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <!-- Point the Sonar Qube Plugin always to the same aggregated JaCoCo report -->
        <sonar.coverage.jacoco.xmlReportPaths>
            ${project.basedir}/../code-coverage/target/site/jacoco-aggregate/jacoco.xml,
            <!-- Only added to suppress warning during Sonar analysis -->
            ${project.basedir}/code-coverage/target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- ========== LOGGING DEPENDENCIES ========== -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- =========== UTILS DEPENDENCIES =========== -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- ========== TESTING DEPENDENCIES ========== -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${junit.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-bom</artifactId>
                <version>${mockito.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven-clean-plugin.version}</version>
                </plugin>
                <!-- ========== Compiler =========== -->
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <release>${maven.compiler.release}</release>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                </plugin>
                <!-- ==== Banned dependencies ====== -->
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <bannedDependencies>
                                        <excludes>
                                            <exclude>junit:junit</exclude>
                                            <exclude>org.junit.vintage:junit-vintage-engine</exclude>
                                        </excludes>
                                    </bannedDependencies>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- ====== INTEGRATION tests ====== -->
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven-failsafe-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <dependenciesToScan>
                                    <dependency>${project.groupId}:integration-tests</dependency>
                                </dependenciesToScan>
                                <groups>IntegrationTest</groups>
                                <additionalClasspathElements>
                                    <additionalClasspathElement>${basedir}/target/classes</additionalClasspathElement>
                                </additionalClasspathElements>
                                <argLine>${integrationTestCoverageAgent}</argLine>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven-install-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
                <!-- ========= UNIT tests ========== -->
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <configuration>
                        <excludedGroups>IntegrationTest</excludedGroups>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${exec-maven-plugin.version}</version>
                </plugin>
                <!-- ========== Coverage =========== -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco-maven-plugin.version}</version>
                    <!-- This lets the JaCoCo agent run in any module in the project -->
                    <executions>
                        <!-- JaCoCo agent for unit tests code coverage -->
                        <execution>
                            <id>initialize-coverage-before-unit-test-execution</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <!-- jacoco agent for integration tests code coverage -->
                        <execution>
                            <id>initialize-coverage-before-integration-test-execution</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <phase>pre-integration-test</phase>
                            <configuration>
                                <propertyName>integrationTestCoverageAgent</propertyName>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                    <configuration>
                        <goalPrefix>sonar</goalPrefix>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>